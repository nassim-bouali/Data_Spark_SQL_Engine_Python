name: Build, Push and Deploy Docker Image to Minikube

on:
  push:
    branches:
      - master  # Project's main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub # Selected container registry
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t spark-sql-batch-processing-python .

      - name: Tag Docker Image
        run: docker tag spark-sql-batch-processing-python:latest ${{ secrets.DOCKER_USERNAME }}/spark-sql-batch-processing-python:latest

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/spark-sql-batch-processing-python:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Minikube
        run: |
          # Install Minikube
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo install minikube /usr/local/bin/

          # Start Minikube
          minikube start
        env:
          KUBECONFIG: ${{ runner.workspace }}/kubeconfig.yaml

      - name: Deploy to Minikube
        run: |
          kubectl apply -f ./deploy/batch-sql-processing-engine-deployment.yaml
        env:
          KUBECONFIG: ${{ runner.workspace }}/kubeconfig.yaml

      - name: Verify Deployment
        run: |
          kubectl wait --timeout=5m --for=condition=available deployment/batch-sql-processing-engine-deployment
          POD_NAME=$(kubectl get pods --selector=app=batch-sql-processing-engine -o jsonpath="{.items[0].metadata.name}")
          kubectl logs -f $POD_NAME
        env:
          KUBECONFIG: ${{ runner.workspace }}/kubeconfig.yaml

      - name: Stop Minikube
        run: minikube stop